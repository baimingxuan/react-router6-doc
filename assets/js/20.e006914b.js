(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{290:function(t,e,a){"use strict";a.r(e);var s=a(13),n=Object(s.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"为-react-路由器做贡献"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#为-react-路由器做贡献"}},[t._v("#")]),t._v(" 为 React 路由器做贡献")]),t._v(" "),e("p",[t._v("感谢您的贡献，你摇滚！")]),t._v(" "),e("p",[t._v("谈到开源，可以做出许多不同类型的贡献，所有这些都是有价值的。这里有一些指南可以帮助您准备您的贡献。")]),t._v(" "),e("h2",{attrs:{id:"设置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设置"}},[t._v("#")]),t._v(" 设置")]),t._v(" "),e("p",[t._v("在您可以为代码库做出贡献之前，您需要分叉回购协议。根据您所做的贡献类型，这看起来会有所不同：")]),t._v(" "),e("ul",[e("li",[t._v("所有新功能、错误修复或"),e("strong",[t._v("任何涉及"),e("code",[t._v("react-router")]),t._v("代码")]),t._v("的内容都应该从分支中分离出来并合并到"),e("code",[t._v("dev")]),t._v("分支中")]),t._v(" "),e("li",[t._v("仅涉及文档的更改可以从分支中分支出来并合并到"),e("code",[t._v("main")]),t._v("分支中")])]),t._v(" "),e("p",[t._v("以下步骤将让您设置为对此 repo 贡献更改：")]),t._v(" "),e("ol",[e("li",[t._v("分叉回购（单击"),e("a",{attrs:{href:"https://github.com/remix-run/react-router",target:"_blank",rel:"noopener noreferrer"}},[t._v("此页面"),e("OutboundLink")],1),t._v("Fork右上角的按钮）")]),t._v(" "),e("li",[t._v("在本地克隆你的叉子")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# in a terminal, cd to parent directory where you want your clone to be, then")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("your_github_username"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("/react-router.git\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" react-router\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# if you are making *any* code changes, make sure to checkout the dev branch")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout dev\n")])])]),e("ol",[e("li",[t._v("安装依赖项并构建。React Router 使用"),e("a",{attrs:{href:"https://classic.yarnpkg.com/lang/en/docs/install",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("yarn")]),t._v("(version 1)"),e("OutboundLink")],1),t._v("，所以你也应该使用。如果使用安装，将生成"),e("code",[t._v("npm")]),t._v("不必要的文件。"),e("code",[t._v("package-lock.json")])])]),t._v(" "),e("h2",{attrs:{id:"认为您发现了错误"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#认为您发现了错误"}},[t._v("#")]),t._v(" 认为您发现了错误？")]),t._v(" "),e("p",[t._v("请遵循问题模板并提供清晰的重现路径和代码示例。最好是测试失败的拉取请求。下一个最好的是指向说明错误的 CodeSandbox 或存储库的链接。")]),t._v(" "),e("h2",{attrs:{id:"提议新的或更改的-api"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#提议新的或更改的-api"}},[t._v("#")]),t._v(" 提议新的或更改的 API？")]),t._v(" "),e("p",[t._v("请提供深思熟虑的评论和一些示例代码，以显示您希望在您的应用程序中使用 React Router 做什么。如果您能先向我们展示您如何受到当前 API 的限制，然后再得出需要更改和/或添加的内容的结论，这将有助于对话。")]),t._v(" "),e("p",[t._v("我们从经验中了解到，小型 API 通常更好，因此我们可能不太愿意添加新内容，除非当前 API 有明显的限制。话虽这么说，我们总是急于听到我们以前没有考虑过的案例，所以请不要害羞！😃")]),t._v(" "),e("h2",{attrs:{id:"问题没有引起注意"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#问题没有引起注意"}},[t._v("#")]),t._v(" 问题没有引起注意？")]),t._v(" "),e("p",[t._v("如果你需要修复一个 bug 而没有人修复它，你最好的办法是为它提供一个修复并提出一个"),e("a",{attrs:{href:"https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/creating-a-pull-request",target:"_blank",rel:"noopener noreferrer"}},[t._v("pull request"),e("OutboundLink")],1),t._v("。开源代码属于我们所有人，推动它向前发展是我们所有人的责任。")]),t._v(" "),e("h2",{attrs:{id:"发出拉取请求"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#发出拉取请求"}},[t._v("#")]),t._v(" 发出拉取请求？")]),t._v(" "),e("p",[t._v("合并请求只需要两个或更多协作者的批准即可；当 PR 作者是合作者时，这算作一个。")]),t._v(" "),e("p",[t._v("在 GitHub 中创建 PR 时，请确保将基础设置为正确的分支。如果您提交的 PR 涉及任何代码，那么这应该是"),e("code",[t._v("dev")]),t._v("分支。在使用“比较更改”标题下方的下拉菜单创作 PR 时，您在 GitHub 中设置了基础："),e("img",{attrs:{src:"https://raw.githubusercontent.com/remix-run/react-router/main/static/base-branch.png",alt:"img"}})]),t._v(" "),e("h3",{attrs:{id:"测试"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#测试"}},[t._v("#")]),t._v(" 测试")]),t._v(" "),e("p",[t._v("所有修复错误或添加功能的提交都需要测试。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("<blink>`不要在没有测试的情况下合并代码！`</blink>\n")])])]),e("h3",{attrs:{id:"文档-示例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#文档-示例"}},[t._v("#")]),t._v(" 文档+示例")]),t._v(" "),e("p",[t._v("所有更改或添加到 API 的提交都必须在拉取请求中完成，同时更新所有相关示例和文档。")]),t._v(" "),e("h2",{attrs:{id:"发展"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#发展"}},[t._v("#")]),t._v(" 发展")]),t._v(" "),e("h3",{attrs:{id:"套餐"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#套餐"}},[t._v("#")]),t._v(" 套餐")]),t._v(" "),e("p",[t._v("React Router 使用 monorepo 来托管多个包的代码。这些包位于"),e("code",[t._v("packages")]),t._v("目录中。")]),t._v(" "),e("p",[t._v("我们使用"),e("a",{attrs:{href:"https://classic.yarnpkg.com/en/docs/workspaces/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Yarn 工作区"),e("OutboundLink")],1),t._v("来管理依赖项的安装和运行各种脚本。要安装所有内容，请确保安装了"),e("a",{attrs:{href:"https://classic.yarnpkg.com/lang/en/docs/install",target:"_blank",rel:"noopener noreferrer"}},[t._v("Yarn（版本 1）"),e("OutboundLink")],1),t._v("，然后从存储库根目录运行"),e("code",[t._v("yarn")]),t._v("或。"),e("code",[t._v("yarn install")])]),t._v(" "),e("h3",{attrs:{id:"建筑"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#建筑"}},[t._v("#")]),t._v(" 建筑")]),t._v(" "),e("p",[t._v("从根目录调用"),e("code",[t._v("yarn build")]),t._v("将运行构建，这应该只需要几秒钟。将所有包构建在一起很重要，因为"),e("code",[t._v("react-router-dom")]),t._v("它们"),e("code",[t._v("react-router-native")]),t._v("都"),e("code",[t._v("react-router")]),t._v("用作依赖项。")]),t._v(" "),e("h3",{attrs:{id:"测试-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#测试-2"}},[t._v("#")]),t._v(" 测试")]),t._v(" "),e("p",[t._v("在运行测试之前，您需要运行构建。构建后，"),e("code",[t._v("yarn test")]),t._v("从根目录运行将运行"),e("strong",[t._v("每个")]),t._v("包的测试。如果要为特定包运行测试，请使用"),e("code",[t._v("yarn test --projects packages/<package-name>")]),t._v("：")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Test all packages")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Test only react-router-dom")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--projects")]),t._v(" packages/react-router-dom\n")])])]),e("h2",{attrs:{id:"存储库分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#存储库分支"}},[t._v("#")]),t._v(" 存储库分支")]),t._v(" "),e("p",[t._v("这个 repo 为不同的目的维护单独的分支。它们看起来像这样：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("- main   > the most recent release and current docs\n- dev    > code under active development between stable releases\n- v5     > the most recent code for a specific major release\n")])])]),e("p",[t._v("可能还有其他分支用于各种功能和实验，但所有的魔法都发生在这些分支上。")]),t._v(" "),e("h2",{attrs:{id:"新版本"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#新版本"}},[t._v("#")]),t._v(" 新版本")]),t._v(" "),e("p",[t._v("当需要削减新版本时，我们会根据版本类型遵循基于分支策略的流程。")]),t._v(" "),e("h3",{attrs:{id:"react-router-next发布"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#react-router-next发布"}},[t._v("#")]),t._v(" "),e("code",[t._v("react-router@next")]),t._v("发布")]),t._v(" "),e("p",[t._v("我们从"),e("code",[t._v("dev")]),t._v("分支的当前状态创建实验版本。可以使用"),e("code",[t._v("@next")]),t._v("标签安装它们：")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" react-router-dom@next\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# or")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" react-router-dom@next\n")])])]),e("p",[e("code",[t._v("dev")]),t._v("当 PR 合并到分支中时，这些发布将自动进行。")]),t._v(" "),e("h3",{attrs:{id:"最新主要版本"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#最新主要版本"}},[t._v("#")]),t._v(" 最新主要版本")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Start from the dev branch.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout dev\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Merge the main branch into dev to ensure that any hotfixes and")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# docs updates are available in the release.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge main\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Create a new release branch from dev.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-b")]),t._v(" release/v6.1.0\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Create a new tag and update version references throughout the")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# codebase.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" run version minor "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# | "patch" | "major"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Push the release branch along with the new release tag.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin release/v6.1.0 --follow-tags\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Wait for GitHub actions to run all tests. If the tests pass, the")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# release is ready to go! Merge the release branch into main and dev.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout main\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge release/v6.1.0\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout dev\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge release/v6.1.0\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The release branch can now be deleted.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-D")]),t._v(" release/v6.1.0\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--delete")]),t._v(" release/v6.1.0\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Now go to GitHub and create the release from the new tag. Let")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# GitHub Actions take care of the rest!")]),t._v("\n")])])]),e("h3",{attrs:{id:"热修复版本"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#热修复版本"}},[t._v("#")]),t._v(" 热修复版本")]),t._v(" "),e("p",[t._v("有时我们有一个关键的错误需要立即修补。如果 bug 影响到最新版本，我们可以直接从"),e("code",[t._v("main")]),t._v("（或存在 bug 的相关主要发布分支）创建一个新版本：")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# From the main branch, make sure to run the build and all tests")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# before creating a new release.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" build "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Assuming the tests pass, create the release tag and update")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# version references throughout the codebase.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" run version patch\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Push changes along with the new release tag.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin main --follow-tags\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# In GitHub, create the release from the new tag and it will be")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# published via GitHub actions")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# When the hot-fix is done, merge the changes into dev and clean")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# up conflicts as needed.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout dev\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge main\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin dev\n")])])])])}),[],!1,null,null,null);e.default=n.exports}}]);