(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{291:function(t,e,a){"use strict";a.r(e);var s=a(13),r=Object(s.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"为-react-router做出贡献"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#为-react-router做出贡献"}},[t._v("#")]),t._v(" 为 React Router做出贡献")]),t._v(" "),e("p",[t._v("感谢您的贡献，您很棒！")]),t._v(" "),e("p",[t._v("在开源方面，可以进行许多不同类型的贡献，所有这些贡献都是有价值的。以下是一些指南，应该帮助您准备好贡献。")]),t._v(" "),e("h2",{attrs:{id:"setup"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#setup"}},[t._v("#")]),t._v(" Setup")]),t._v(" "),e("p",[t._v("在您可以为代码库做出贡献之前，您需要fork该repo。这将根据您所做的贡献类型而有所不同：")]),t._v(" "),e("ul",[e("li",[t._v("所有新功能、错误修复或"),e("strong",[t._v("任何涉及 "),e("code",[t._v("react-router")]),t._v(" 代码")]),t._v("的内容都应该从 "),e("code",[t._v("dev")]),t._v(" 分支分支并合并")]),t._v(" "),e("li",[t._v("仅涉及文档的更改可以从 "),e("code",[t._v("main")]),t._v(" 分支分支并合并")])]),t._v(" "),e("p",[t._v("以下步骤将使您准备好为此repo做出修改的贡献：")]),t._v(" "),e("ol",[e("li",[t._v("Fork该repo（单击"),e("a",{attrs:{href:"https://github.com/remix-run/react-router",target:"_blank",rel:"noopener noreferrer"}},[t._v("此页面"),e("OutboundLink")],1),t._v("右上角的Fork按钮）")]),t._v(" "),e("li",[t._v("克隆您的分支到本地")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# in a terminal, cd to parent directory where you want your clone to be, then")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("your_github_username"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("/react-router.git\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" react-router\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# if you are making *any* code changes, make sure to checkout the dev branch")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout dev\n")])])]),e("ol",[e("li",[t._v("安装依赖项构建。React Router 使用"),e("a",{attrs:{href:"https://classic.yarnpkg.com/lang/en/docs/install",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("yarn")]),t._v("(版本1)"),e("OutboundLink")],1),t._v("，因此您也应该使用它。如果您使用 "),e("code",[t._v("npm")]),t._v(" 安装，将生成不必要的 "),e("code",[t._v("package-lock.json")]),t._v(" 文件。")])]),t._v(" "),e("h2",{attrs:{id:"认为您发现了错误"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#认为您发现了错误"}},[t._v("#")]),t._v(" 认为您发现了错误？")]),t._v(" "),e("p",[t._v("请遵守问题模板并提供清晰的复现路径和代码示例。最好的方法是使用失败的测试提交拉取请求。其次是提供指向 CodeSandbox 或说明问题的存储库的链接。")]),t._v(" "),e("h2",{attrs:{id:"提议新的或更改的-api"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#提议新的或更改的-api"}},[t._v("#")]),t._v(" 提议新的或更改的 API？")]),t._v(" "),e("p",[t._v("请提供有思想的评论和一些示例代码，展示您想在应用程序中如何使用 React Router。如果您可以先展示当前 API 限制您的方式，那么这将有助于对话。在跳到关于需要更改和/或添加什么的结论之前，了解当前 API 的限制有助于对话。")]),t._v(" "),e("p",[t._v("我们通过经验学到，小型 API 通常更好，因此我们可能会有点不愿意添加新内容，除非当前 API 明显存在限制。话虽如此，我们总是渴望听到我们以前没有考虑过的情况，所以请不要害羞！ 😃")]),t._v(" "),e("h2",{attrs:{id:"问题没有得到关注"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#问题没有得到关注"}},[t._v("#")]),t._v(" 问题没有得到关注？")]),t._v(" "),e("p",[t._v("如果您需要修复错误，而没有人修复它，您最好的选择是提供修复并发起"),e("a",{attrs:{href:"https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/creating-a-pull-request",target:"_blank",rel:"noopener noreferrer"}},[t._v("pull request"),e("OutboundLink")],1),t._v("。开源代码属于我们所有人，我们有责任推动它向前发展。")]),t._v(" "),e("h2",{attrs:{id:"如何发起pull-request"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如何发起pull-request"}},[t._v("#")]),t._v(" 如何发起Pull Request？")]),t._v(" "),e("p",[t._v("只需要两个或更多协作者的批准即可合并 Pull Request；当 PR 作者是协作者时，这算作一个。")]),t._v(" "),e("blockquote",[e("p",[t._v("在 GitHub 中创建 PR 时，请确保将基础设置为正确的分支。如果您提交的 PR 涉及任何代码，则应该是 "),e("code",[t._v("dev")]),t._v(" 分支。在 PR 作者下拉菜单下的“比较更改”标题下，您可以在 GitHub 中设置基础："),e("img",{attrs:{src:"https://raw.githubusercontent.com/remix-run/react-router/main/static/base-branch.png",alt:"img"}})])]),t._v(" "),e("h3",{attrs:{id:"测试"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#测试"}},[t._v("#")]),t._v(" 测试")]),t._v(" "),e("p",[t._v("所有修复错误或添加功能的提交都需要测试。")]),t._v(" "),e("p",[e("blink",[e("code",[t._v("不要在没有测试的情况下合并代码！")])])],1),t._v(" "),e("h3",{attrs:{id:"文档-示例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#文档-示例"}},[t._v("#")]),t._v(" 文档+示例")]),t._v(" "),e("p",[t._v("所有更改或添加 API 的提交必须在一个 Pull Request 中完成，该 Pull Request 还更新了所有相关示例和文档。")]),t._v(" "),e("h2",{attrs:{id:"development"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#development"}},[t._v("#")]),t._v(" Development")]),t._v(" "),e("h3",{attrs:{id:"packages"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#packages"}},[t._v("#")]),t._v(" Packages")]),t._v(" "),e("p",[t._v("React Router 使用单一存储库来托管多个软件包的代码。这些软件包位于 "),e("code",[t._v("packages")]),t._v(" 目录中。")]),t._v(" "),e("p",[t._v("我们使用[Yarn 工作区来管理依赖项的安装和运行各种脚本。为了安装所有内容，请确保您已安装"),e("a",{attrs:{href:"https://classic.yarnpkg.com/lang/en/docs/install",target:"_blank",rel:"noopener noreferrer"}},[t._v("Yarn(版本1)"),e("OutboundLink")],1),t._v("，然后从存储库根目录运行 "),e("code",[t._v("yarn")]),t._v(" 或 "),e("code",[t._v("yarn install")]),t._v(" 。")]),t._v(" "),e("h3",{attrs:{id:"构建"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#构建"}},[t._v("#")]),t._v(" 构建")]),t._v(" "),e("p",[t._v("从根目录调用 "),e("code",[t._v("yarn build")]),t._v(" 将运行构建，这应该只需要几秒钟。重要的是要一起构建所有软件包，因为 "),e("code",[t._v("react-router-dom")]),t._v(" 和 "),e("code",[t._v("react-router-native")]),t._v(" 都使用 "),e("code",[t._v("react-router")]),t._v(" 作为依赖项。")]),t._v(" "),e("h3",{attrs:{id:"测试-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#测试-2"}},[t._v("#")]),t._v(" 测试")]),t._v(" "),e("p",[t._v("在运行测试之前，您需要运行构建。构建后，从根目录运行 "),e("code",[t._v("yarn test")]),t._v(" 将运行每个软件包的测试。如果要运行特定软件包的测试，请使用 "),e("code",[t._v("yarn test --projects packages/<package-name>")]),t._v(" ：")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Test all packages")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Test only react-router-dom")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--projects")]),t._v(" packages/react-router-dom\n")])])]),e("h2",{attrs:{id:"仓库分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#仓库分支"}},[t._v("#")]),t._v(" 仓库分支")]),t._v(" "),e("p",[t._v("此存储库维护不同用途的单独分支。它们看起来像这样：")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("- main   "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" the "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("most")]),t._v(" recent release and current docs\n- dev    "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" code under active development between stable releases\n- v5     "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" the "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("most")]),t._v(" recent code "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" a specific major release\n")])])]),e("p",[t._v("可能会有其他分支用于各种功能和实验，但所有魔法都发生在这些分支中。")]),t._v(" "),e("h2",{attrs:{id:"新版本"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#新版本"}},[t._v("#")]),t._v(" 新版本")]),t._v(" "),e("p",[t._v("当到了发布新版本的时候，我们会根据我们的分支策略遵循一个基于流程。")]),t._v(" "),e("h3",{attrs:{id:"react-router-next发布"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#react-router-next发布"}},[t._v("#")]),t._v(" "),e("code",[t._v("react-router@next")]),t._v("发布")]),t._v(" "),e("p",[t._v("我们从当前 "),e("code",[t._v("dev")]),t._v(" 分支的状态创建实验性发布。它们可以通过使用 "),e("code",[t._v("@next")]),t._v(" 标签进行安装：")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" react-router-dom@next\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# or")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" react-router-dom@next\n")])])]),e("p",[t._v("这些发布将自动化，因为PR合并到 "),e("code",[t._v("dev")]),t._v(" 分支中。")]),t._v(" "),e("h3",{attrs:{id:"最新主要版本发布"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#最新主要版本发布"}},[t._v("#")]),t._v(" 最新主要版本发布")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Start from the dev branch.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout dev\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Merge the main branch into dev to ensure that any hotfixes and")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# docs updates are available in the release.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge main\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Create a new release branch from dev.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-b")]),t._v(" release/v6.1.0\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Create a new tag and update version references throughout the")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# codebase.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" run version minor "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# | "patch" | "major"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Push the release branch along with the new release tag.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin release/v6.1.0 --follow-tags\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Wait for GitHub actions to run all tests. If the tests pass, the")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# release is ready to go! Merge the release branch into main and dev.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout main\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge release/v6.1.0\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout dev\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge release/v6.1.0\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The release branch can now be deleted.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-D")]),t._v(" release/v6.1.0\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--delete")]),t._v(" release/v6.1.0\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Now go to GitHub and create the release from the new tag. Let")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# GitHub Actions take care of the rest!")]),t._v("\n")])])]),e("h3",{attrs:{id:"热修复发布"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#热修复发布"}},[t._v("#")]),t._v(" 热修复发布")]),t._v(" "),e("p",[t._v("有时我们有一个关键的错误需要立即修补。如果该错误影响到最新版本，则可以直接从 "),e("code",[t._v("main")]),t._v(" （或存在错误的相关主要版本分支）创建新版本：")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# From the main branch, make sure to run the build and all tests")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# before creating a new release.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" build "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Assuming the tests pass, create the release tag and update")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# version references throughout the codebase.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" run version patch\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Push changes along with the new release tag.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin main --follow-tags\n \n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# In GitHub, create the release from the new tag and it will be")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# published via GitHub actions")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# When the hot-fix is done, merge the changes into dev and clean")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# up conflicts as needed.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout dev\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge main\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin dev\n")])])])])}),[],!1,null,null,null);e.default=r.exports}}]);