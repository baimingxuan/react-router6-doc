import{_ as s,o as a,c as n,Q as o}from"./chunks/framework.6f0990a9.js";const g=JSON.parse('{"title":"useNavigation","description":"","frontmatter":{},"headers":[],"relativePath":"hooks/use-navigation.md","filePath":"hooks/use-navigation.md","lastUpdated":1699796651000}'),l={name:"hooks/use-navigation.md"},p=o(`<h1 id="usenavigation" tabindex="-1"><code>useNavigation</code> <a class="header-anchor" href="#usenavigation" aria-label="Permalink to &quot;\`useNavigation\`&quot;">​</a></h1><p>该钩子会告诉你关于页面导航的一切信息，以便在数据突变时建立待定的导航指示器和优化的用户界面。例如：</p><ul><li>全局加载指示器</li><li>在发生突变时禁用表单</li><li>在提交按钮上添加繁忙指示器</li><li>在服务器上创建新记录时优化的显示新记录</li><li>在更新记录时优化的显示记录的新状态</li></ul><blockquote><p>IMPORTANT</p><p>此功能只有在使用数据路由器时才有效，请参阅<a href="./../routers/picking-a-router">&quot;选择路由&quot;</a>。</p></blockquote><div class="language-jsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { useNavigation } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;react-router-dom&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">SomeComponent</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">navigation</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">useNavigation</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">  navigation.state;</span></span>
<span class="line"><span style="color:#E1E4E8;">  navigation.location;</span></span>
<span class="line"><span style="color:#E1E4E8;">  navigation.formData;</span></span>
<span class="line"><span style="color:#E1E4E8;">  navigation.json;</span></span>
<span class="line"><span style="color:#E1E4E8;">  navigation.text;</span></span>
<span class="line"><span style="color:#E1E4E8;">  navigation.formAction;</span></span>
<span class="line"><span style="color:#E1E4E8;">  navigation.formMethod;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { useNavigation } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;react-router-dom&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">SomeComponent</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">navigation</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">useNavigation</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">  navigation.state;</span></span>
<span class="line"><span style="color:#24292E;">  navigation.location;</span></span>
<span class="line"><span style="color:#24292E;">  navigation.formData;</span></span>
<span class="line"><span style="color:#24292E;">  navigation.json;</span></span>
<span class="line"><span style="color:#24292E;">  navigation.text;</span></span>
<span class="line"><span style="color:#24292E;">  navigation.formAction;</span></span>
<span class="line"><span style="color:#24292E;">  navigation.formMethod;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><blockquote><p>IMPORTANT</p><p><code>useNavigation().formMethod</code> 字段为小写，没有 <code>future.v7_normalizeFormMethod</code> <a href="./../guides/api-development-strategy">Future Flag</a>。为了与 <code>fetch()</code> 在 v7 版本中的行为保持一致，我们正在将其规范化为大写，因此请升级 React Router v6 应用程序以采用大写 HTTP 方法。</p></blockquote><h2 id="navigation-state" tabindex="-1"><code>navigation.state</code> <a class="header-anchor" href="#navigation-state" aria-label="Permalink to &quot;\`navigation.state\`&quot;">​</a></h2><ul><li><strong>idle</strong> -- 没有待处理的导航。</li><li><strong>submitting</strong>-- 由于使用 POST、PUT、PATCH 或 DELETE 提交表单，路由操作被调用</li><li><strong>loading</strong> --下一个路由的加载器正在调用以呈现下一页</li></ul><p>正常导航和 GET 表单提交通过这些状态转换：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">idle</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">→</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">loading</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">→</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">idle</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">idle</span><span style="color:#24292E;"> </span><span style="color:#032F62;">→</span><span style="color:#24292E;"> </span><span style="color:#032F62;">loading</span><span style="color:#24292E;"> </span><span style="color:#032F62;">→</span><span style="color:#24292E;"> </span><span style="color:#032F62;">idle</span></span></code></pre></div><p>通过 POST、PUT、PATCH 或 DELETE 提交的表单会在这些状态中转换：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">idle</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">→</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">submitting</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">→</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">loading</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">→</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">idle</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">idle</span><span style="color:#24292E;"> </span><span style="color:#032F62;">→</span><span style="color:#24292E;"> </span><span style="color:#032F62;">submitting</span><span style="color:#24292E;"> </span><span style="color:#032F62;">→</span><span style="color:#24292E;"> </span><span style="color:#032F62;">loading</span><span style="color:#24292E;"> </span><span style="color:#032F62;">→</span><span style="color:#24292E;"> </span><span style="color:#032F62;">idle</span></span></code></pre></div><p>下面是一个简单的提交按钮，当导航状态改变时，它的文本也会改变：</p><div class="language-jsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">SubmitButton</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">navigation</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">useNavigation</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">text</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">    navigation.state </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;submitting&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;Saving...&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> navigation.state </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;loading&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;Saved!&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;Go&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> &lt;</span><span style="color:#85E89D;">button</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">type</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;submit&quot;</span><span style="color:#E1E4E8;">&gt;{text}&lt;/</span><span style="color:#85E89D;">button</span><span style="color:#E1E4E8;">&gt;;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">SubmitButton</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">navigation</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">useNavigation</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">text</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">    navigation.state </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;submitting&quot;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;Saving...&quot;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> navigation.state </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;loading&quot;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;Saved!&quot;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;Go&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> &lt;</span><span style="color:#22863A;">button</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">type</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;submit&quot;</span><span style="color:#24292E;">&gt;{text}&lt;/</span><span style="color:#22863A;">button</span><span style="color:#24292E;">&gt;;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>虽然 <code>navigation.state</code> 提供了主动导航的高级状态，但通过将其与其他 <code>navigation</code> 方面相结合，可以推断出更细粒度的信息：</p><div class="language-jsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// Is this just a normal load?</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> isNormalLoad </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">  navigation.state </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;loading&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span></span>
<span class="line"><span style="color:#E1E4E8;">  navigation.formData </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Are we reloading after an action?</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> isReloading </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">  navigation.state </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;loading&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span></span>
<span class="line"><span style="color:#E1E4E8;">  navigation.formData </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span></span>
<span class="line"><span style="color:#E1E4E8;">  navigation.formAction </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> navigation.location.pathname;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Are we redirecting after an action?</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> isRedirecting </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">  navigation.state </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;loading&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span></span>
<span class="line"><span style="color:#E1E4E8;">  navigation.formData </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span></span>
<span class="line"><span style="color:#E1E4E8;">  navigation.formAction </span><span style="color:#F97583;">!==</span><span style="color:#E1E4E8;"> navigation.location.pathname;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// Is this just a normal load?</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> isNormalLoad </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">  navigation.state </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;loading&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;&amp;</span></span>
<span class="line"><span style="color:#24292E;">  navigation.formData </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Are we reloading after an action?</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> isReloading </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">  navigation.state </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;loading&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;&amp;</span></span>
<span class="line"><span style="color:#24292E;">  navigation.formData </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;&amp;</span></span>
<span class="line"><span style="color:#24292E;">  navigation.formAction </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> navigation.location.pathname;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Are we redirecting after an action?</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> isRedirecting </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">  navigation.state </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;loading&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;&amp;</span></span>
<span class="line"><span style="color:#24292E;">  navigation.formData </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;&amp;</span></span>
<span class="line"><span style="color:#24292E;">  navigation.formAction </span><span style="color:#D73A49;">!==</span><span style="color:#24292E;"> navigation.location.pathname;</span></span></code></pre></div><h2 id="navigation-formdata" tabindex="-1"><code>navigation.formData</code> <a class="header-anchor" href="#navigation-formdata" aria-label="Permalink to &quot;\`navigation.formData\`&quot;">​</a></h2><p>任何从 <code>&lt;Form&gt;</code> 或 <code>useSubmit</code> 开始的 POST、PUT、PATCH 或 DELETE 导航都会附加表单的提交数据。这对使用 <code>submission.formData</code> <code>FormData</code> 对象构建 &quot;优化用户界面 &quot;非常有用。</p><p>如果提交的是 GET 表单， <code>formData</code> 将为空，数据将反映在 <code>navigation.location.search</code> 中。</p><h2 id="navigation-json" tabindex="-1"><code>navigation.json</code> <a class="header-anchor" href="#navigation-json" aria-label="Permalink to &quot;\`navigation.json\`&quot;">​</a></h2><p>任何从 <code>useSubmit(payload, { encType: &quot;application/json&quot; })</code> 开始的 POST、PUT、PATCH 或 DELETE 导航都将在 <code>navigation.json</code> 中提供 JSON 值。</p><h2 id="navigation-text" tabindex="-1"><code>navigation.text</code> <a class="header-anchor" href="#navigation-text" aria-label="Permalink to &quot;\`navigation.text\`&quot;">​</a></h2><p>任何从 <code>useSubmit(payload, { encType: &quot;text/plain&quot; })</code> 开始的 POST、PUT、PATCH 或 DELETE 导航都将在 <code>navigation.text</code> 中提供文本值。</p><h2 id="navigation-location" tabindex="-1"><code>navigation.location</code> <a class="header-anchor" href="#navigation-location" aria-label="Permalink to &quot;\`navigation.location\`&quot;">​</a></h2><p>这告诉您下一个<a href="./../utils/location">位置</a>是什么。</p><p>请注意，如果正在向链接指向的 URL 提交表单，该链接将不会显示为 &quot;pending&quot;，因为我们只在 &quot;loading &quot;状态下才这样做。当状态为 &quot;submitting &quot;时，表单将包含待处理用户界面，一旦操作完成，链接将转为待处理状态。</p>`,26),t=[p];function e(c,r,i,E,y,d){return a(),n("div",null,t)}const F=s(l,[["render",e]]);export{g as __pageData,F as default};
