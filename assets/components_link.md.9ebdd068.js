import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.0e8ae64e.js";const u=JSON.parse('{"title":"<Link>","description":"","frontmatter":{},"headers":[],"relativePath":"components/link.md","filePath":"components/link.md","lastUpdated":1699184691000}'),p={name:"components/link.md"},o=l(`<h1 id="link" tabindex="-1"><code>&lt;Link&gt;</code> <a class="header-anchor" href="#link" aria-label="Permalink to &quot;\`&lt;Link&gt;\`&quot;">​</a></h1><blockquote><p>NOTE</p><p>这是<code>&lt;Link&gt;</code> 的 Web 版。有关 React Native 版本，<a href="https://baimingxuan.github.io/react-router6-doc/components/link-native" target="_blank" rel="noreferrer">请访问此处</a>。</p></blockquote><p>类型声明</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">declare</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Link</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">props</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">LinkProps</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">React</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">ReactElement</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">interface</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">LinkProps</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Omit</span><span style="color:#E1E4E8;">&lt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">React</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">AnchorHTMLAttributes</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">HTMLAnchorElement</span><span style="color:#E1E4E8;">&gt;,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;href&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &gt; {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">to</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">To</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">preventScrollReset</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">boolean</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">relative</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;route&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;path&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">reloadDocument</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">boolean</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">replace</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">boolean</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">state</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">any</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">unstable_viewTransition</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">boolean</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">type</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">To</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Partial</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">Path</span><span style="color:#E1E4E8;">&gt;;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">interface</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Path</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">pathname</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">search</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">hash</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">declare</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Link</span><span style="color:#24292E;">(</span><span style="color:#E36209;">props</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">LinkProps</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">React</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">ReactElement</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">interface</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">LinkProps</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Omit</span><span style="color:#24292E;">&lt;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">React</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">AnchorHTMLAttributes</span><span style="color:#24292E;">&lt;</span><span style="color:#6F42C1;">HTMLAnchorElement</span><span style="color:#24292E;">&gt;,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;href&quot;</span></span>
<span class="line"><span style="color:#24292E;">  &gt; {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">to</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">To</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">preventScrollReset</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">boolean</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">relative</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;route&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;path&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">reloadDocument</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">boolean</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">replace</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">boolean</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">state</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">any</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">unstable_viewTransition</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">boolean</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">type</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">To</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Partial</span><span style="color:#24292E;">&lt;</span><span style="color:#6F42C1;">Path</span><span style="color:#24292E;">&gt;;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">interface</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Path</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">pathname</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">search</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">hash</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p><code>&lt;Link&gt;</code> 是一种元素，用户可以通过点击或轻点它来导航到另一个页面。在 <code>react-router-dom</code> 中， <code>&lt;Link&gt;</code> 会渲染一个可访问的 <code>&lt;a&gt;</code> 元素，该元素带有一个真正的 <code>href</code> ，指向它所链接的资源。这意味着，右键单击 <code>&lt;Link&gt;</code> 等操作都能如您所愿。您可以使用 <code>&lt;Link reloadDocument&gt;</code> 跳过客户端路由，让浏览器正常处理转换（就像 <code>&lt;a href&gt;</code> 一样）。</p><div class="language-jsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> React </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;react&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { Link } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;react-router-dom&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">UsersIndexPage</span><span style="color:#E1E4E8;">({ </span><span style="color:#FFAB70;">users</span><span style="color:#E1E4E8;"> }) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> (</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">      &lt;</span><span style="color:#85E89D;">h1</span><span style="color:#E1E4E8;">&gt;Users&lt;/</span><span style="color:#85E89D;">h1</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">      &lt;</span><span style="color:#85E89D;">ul</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        {users.</span><span style="color:#B392F0;">map</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">user</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> (</span></span>
<span class="line"><span style="color:#E1E4E8;">          &lt;</span><span style="color:#85E89D;">li</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">key</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">{user.id}&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">            &lt;</span><span style="color:#79B8FF;">Link</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">to</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">{user.id}&gt;{user.name}&lt;/</span><span style="color:#79B8FF;">Link</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">          &lt;/</span><span style="color:#85E89D;">li</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        ))}</span></span>
<span class="line"><span style="color:#E1E4E8;">      &lt;/</span><span style="color:#85E89D;">ul</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;/</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  );</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> React </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;react&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { Link } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;react-router-dom&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">UsersIndexPage</span><span style="color:#24292E;">({ </span><span style="color:#E36209;">users</span><span style="color:#24292E;"> }) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> (</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">      &lt;</span><span style="color:#22863A;">h1</span><span style="color:#24292E;">&gt;Users&lt;/</span><span style="color:#22863A;">h1</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">      &lt;</span><span style="color:#22863A;">ul</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        {users.</span><span style="color:#6F42C1;">map</span><span style="color:#24292E;">((</span><span style="color:#E36209;">user</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> (</span></span>
<span class="line"><span style="color:#24292E;">          &lt;</span><span style="color:#22863A;">li</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">key</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{user.id}&gt;</span></span>
<span class="line"><span style="color:#24292E;">            &lt;</span><span style="color:#005CC5;">Link</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">to</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{user.id}&gt;{user.name}&lt;/</span><span style="color:#005CC5;">Link</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">          &lt;/</span><span style="color:#22863A;">li</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        ))}</span></span>
<span class="line"><span style="color:#24292E;">      &lt;/</span><span style="color:#22863A;">ul</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  );</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>相对 <code>&lt;Link to&gt;</code> 值（不以 <code>/</code> 开头）是相对于父路由解析的，这意味着它建立在渲染该 <code>&lt;Link&gt;</code> 的路由所匹配的 URL 路径之上。它可能包含 <code>..</code> ，以链接到层级更高的路由。在这种情况下， <code>..</code> 的工作原理与命令行函数 <code>cd</code> 完全相同；每 <code>..</code> 删除父路径中的一段。</p><blockquote><p>当当前 URL 以 <code>/</code> 结尾时，带有 <code>..</code> 的 <code>&lt;Link to&gt;</code> 与普通 <code>&lt;a href&gt;</code> 的行为不同。 <code>&lt;Link to&gt;</code> 会忽略尾部斜线，并为每个 <code>..</code> 删除一个 URL 段。但是，当当前 URL 以 <code>/</code> 结尾时， <code>&lt;a href&gt;</code> 值处理 <code>..</code> 的方式与其不同。</p></blockquote><h2 id="relative" tabindex="-1"><code>relative</code> <a class="header-anchor" href="#relative" aria-label="Permalink to &quot;\`relative\`&quot;">​</a></h2><p>默认情况下，链接是相对于路由层次结构（ <code>relative=&quot;route&quot;</code> ）的，因此 <code>..</code> 将提升一个 <code>Route</code> 级别。有时，您可能会发现有一些匹配的 URL 模式没有嵌套的意义，而您更希望使用相对路径路由。您可以通过 <code>relative=&quot;path&quot;</code> 选择这种行为：</p><div class="language-jsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// Contact and EditContact do not share additional UI layout</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#79B8FF;">Route</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">path</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;/&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">element</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">{&lt;</span><span style="color:#79B8FF;">Layout</span><span style="color:#E1E4E8;"> /&gt;}&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#79B8FF;">Route</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">path</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;contacts/:id&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">element</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">{&lt;</span><span style="color:#79B8FF;">Contact</span><span style="color:#E1E4E8;"> /&gt;} /&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#79B8FF;">Route</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">path</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;contacts/:id/edit&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">element</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">{&lt;</span><span style="color:#79B8FF;">EditContact</span><span style="color:#E1E4E8;"> /&gt;}</span></span>
<span class="line"><span style="color:#E1E4E8;">  /&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#79B8FF;">Route</span><span style="color:#E1E4E8;">&gt;;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">EditContact</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// Since Contact is not a parent of EditContact we need to go up one level</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// in the path, instead of one level in the Route hierarchy</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> (</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#79B8FF;">Link</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">to</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;..&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">relative</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;path&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">      Cancel</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;/</span><span style="color:#79B8FF;">Link</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  );</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// Contact and EditContact do not share additional UI layout</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#005CC5;">Route</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">path</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;/&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">element</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{&lt;</span><span style="color:#005CC5;">Layout</span><span style="color:#24292E;"> /&gt;}&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#005CC5;">Route</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">path</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;contacts/:id&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">element</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{&lt;</span><span style="color:#005CC5;">Contact</span><span style="color:#24292E;"> /&gt;} /&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#005CC5;">Route</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">path</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;contacts/:id/edit&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">element</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{&lt;</span><span style="color:#005CC5;">EditContact</span><span style="color:#24292E;"> /&gt;}</span></span>
<span class="line"><span style="color:#24292E;">  /&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#005CC5;">Route</span><span style="color:#24292E;">&gt;;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">EditContact</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// Since Contact is not a parent of EditContact we need to go up one level</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// in the path, instead of one level in the Route hierarchy</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> (</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#005CC5;">Link</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">to</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;..&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">relative</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;path&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">      Cancel</span></span>
<span class="line"><span style="color:#24292E;">    &lt;/</span><span style="color:#005CC5;">Link</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  );</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="preventscrollreset" tabindex="-1"><code>preventScrollReset</code> <a class="header-anchor" href="#preventscrollreset" aria-label="Permalink to &quot;\`preventScrollReset\`&quot;">​</a></h2><p>如果使用的是<a href="https://baimingxuan.github.io/react-router6-doc/components/scroll-restoration" target="_blank" rel="noreferrer"><code>&lt;ScrollRestoration&gt;</code></a>，则可以防止在点击链接时将滚动位置重置到窗口顶部。</p><div class="language-jsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#79B8FF;">Link</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">to</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;?tab=one&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">preventScrollReset</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">{</span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">} /&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#005CC5;">Link</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">to</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;?tab=one&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">preventScrollReset</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{</span><span style="color:#005CC5;">true</span><span style="color:#24292E;">} /&gt;</span></span></code></pre></div><p>这并不会阻止用户使用后退/前进按钮回到该位置时恢复滚动位置，而只是防止用户点击链接时重置滚动位置。</p><p>举例来说，如果一个标签列表操作的URL 搜索参数不在页面顶部，就可能需要这种行为。你不会希望滚动位置跳到顶部，因为这可能会将切换的内容滚出视口！</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">      ┌─────────────────────────┐</span></span>
<span class="line"><span style="color:#e1e4e8;">      │                         ├──┐</span></span>
<span class="line"><span style="color:#e1e4e8;">      │                         │  │</span></span>
<span class="line"><span style="color:#e1e4e8;">      │                         │  │ scrolled</span></span>
<span class="line"><span style="color:#e1e4e8;">      │                         │  │ out of view</span></span>
<span class="line"><span style="color:#e1e4e8;">      │                         │  │</span></span>
<span class="line"><span style="color:#e1e4e8;">      │                         │ ◄┘</span></span>
<span class="line"><span style="color:#e1e4e8;">    ┌─┴─────────────────────────┴─┐</span></span>
<span class="line"><span style="color:#e1e4e8;">    │                             ├─┐</span></span>
<span class="line"><span style="color:#e1e4e8;">    │                             │ │ viewport</span></span>
<span class="line"><span style="color:#e1e4e8;">    │   ┌─────────────────────┐   │ │</span></span>
<span class="line"><span style="color:#e1e4e8;">    │   │  tab   tab   tab    │   │ │</span></span>
<span class="line"><span style="color:#e1e4e8;">    │   ├─────────────────────┤   │ │</span></span>
<span class="line"><span style="color:#e1e4e8;">    │   │                     │   │ │</span></span>
<span class="line"><span style="color:#e1e4e8;">    │   │                     │   │ │</span></span>
<span class="line"><span style="color:#e1e4e8;">    │   │ content             │   │ │</span></span>
<span class="line"><span style="color:#e1e4e8;">    │   │                     │   │ │</span></span>
<span class="line"><span style="color:#e1e4e8;">    │   │                     │   │ │</span></span>
<span class="line"><span style="color:#e1e4e8;">    │   └─────────────────────┘   │ │</span></span>
<span class="line"><span style="color:#e1e4e8;">    │                             │◄┘</span></span>
<span class="line"><span style="color:#e1e4e8;">    └─────────────────────────────┘</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">      ┌─────────────────────────┐</span></span>
<span class="line"><span style="color:#24292e;">      │                         ├──┐</span></span>
<span class="line"><span style="color:#24292e;">      │                         │  │</span></span>
<span class="line"><span style="color:#24292e;">      │                         │  │ scrolled</span></span>
<span class="line"><span style="color:#24292e;">      │                         │  │ out of view</span></span>
<span class="line"><span style="color:#24292e;">      │                         │  │</span></span>
<span class="line"><span style="color:#24292e;">      │                         │ ◄┘</span></span>
<span class="line"><span style="color:#24292e;">    ┌─┴─────────────────────────┴─┐</span></span>
<span class="line"><span style="color:#24292e;">    │                             ├─┐</span></span>
<span class="line"><span style="color:#24292e;">    │                             │ │ viewport</span></span>
<span class="line"><span style="color:#24292e;">    │   ┌─────────────────────┐   │ │</span></span>
<span class="line"><span style="color:#24292e;">    │   │  tab   tab   tab    │   │ │</span></span>
<span class="line"><span style="color:#24292e;">    │   ├─────────────────────┤   │ │</span></span>
<span class="line"><span style="color:#24292e;">    │   │                     │   │ │</span></span>
<span class="line"><span style="color:#24292e;">    │   │                     │   │ │</span></span>
<span class="line"><span style="color:#24292e;">    │   │ content             │   │ │</span></span>
<span class="line"><span style="color:#24292e;">    │   │                     │   │ │</span></span>
<span class="line"><span style="color:#24292e;">    │   │                     │   │ │</span></span>
<span class="line"><span style="color:#24292e;">    │   └─────────────────────┘   │ │</span></span>
<span class="line"><span style="color:#24292e;">    │                             │◄┘</span></span>
<span class="line"><span style="color:#24292e;">    └─────────────────────────────┘</span></span></code></pre></div><h2 id="replace" tabindex="-1"><code>replace</code> <a class="header-anchor" href="#replace" aria-label="Permalink to &quot;\`replace\`&quot;">​</a></h2><p>如果您希望通过<a href="https://developer.mozilla.org/en-US/docs/Web/API/History/replaceState" target="_blank" rel="noreferrer"><code>history.replaceState</code></a> 替换历史堆栈中的当前条目，而不是默认使用<a href="https://developer.mozilla.org/en-US/docs/Web/API/History/pushState" target="_blank" rel="noreferrer"><code>history.pushState</code></a>，则可以使用 <code>replace</code> 属性。</p><h2 id="state" tabindex="-1"><code>state</code> <a class="header-anchor" href="#state" aria-label="Permalink to &quot;\`state\`&quot;">​</a></h2><p><code>state</code> 属性可用于为存储在<a href="https://developer.mozilla.org/en-US/docs/Web/API/History/state" target="_blank" rel="noreferrer">历史状态</a>中的新位置设置一个有状态的值。随后可通过 <code>useLocation()</code> 访问该值。</p><div class="language-jsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#79B8FF;">Link</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">to</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;new-path&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">state</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">{{ some: </span><span style="color:#9ECBFF;">&quot;value&quot;</span><span style="color:#E1E4E8;"> }} /&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#005CC5;">Link</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">to</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;new-path&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">state</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{{ some: </span><span style="color:#032F62;">&quot;value&quot;</span><span style="color:#24292E;"> }} /&gt;</span></span></code></pre></div><p>您可以在 &quot;新路径 &quot;路由上访问该状态值：</p><div class="language-jsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> { state } </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">useLocation</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> { state } </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">useLocation</span><span style="color:#24292E;">();</span></span></code></pre></div><h2 id="reloaddocument" tabindex="-1"><code>reloadDocument</code> <a class="header-anchor" href="#reloaddocument" aria-label="Permalink to &quot;\`reloadDocument\`&quot;">​</a></h2><p><code>reloadDocument</code> 属性可用于跳过客户端路由，让浏览器正常处理转换（如同 <code>&lt;a href&gt;</code> ）。</p><h2 id="unstable-viewtransition" tabindex="-1"><code>unstable_viewTransition</code> <a class="header-anchor" href="#unstable-viewtransition" aria-label="Permalink to &quot;\`unstable_viewTransition\`&quot;">​</a></h2><p><code>unstable_viewTransition</code> 属性通过将最终状态更新封装在 <code>document.startViewTransition()</code> 中，启用了该导航的<a href="https://developer.mozilla.org/en-US/docs/Web/API/View_Transitions_API" target="_blank" rel="noreferrer">视图转换</a>：</p><div class="language-jsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#79B8FF;">Link</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">to</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">{to} </span><span style="color:#B392F0;">unstable_viewTransition</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  Click me</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#79B8FF;">Link</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#005CC5;">Link</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">to</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{to} </span><span style="color:#6F42C1;">unstable_viewTransition</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  Click me</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#005CC5;">Link</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><p>如果需要为该视图转换应用特定样式，还需要利用<a href="https://baimingxuan.github.io/react-router6-doc/hooks//use-view-transition-state" target="_blank" rel="noreferrer"><code>unstable_useViewTransitionState()</code></a> 钩子（或查看 <a href="https://baimingxuan.github.io/react-router6-doc/components/nav-link" target="_blank" rel="noreferrer">NavLink</a> 中的 <code>transitioning</code> 类和 <code>isTransitioning</code> 渲染属性）：</p><div class="language-jsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ImageLink</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">to</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">isTransitioning</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">unstable_useViewTransitionState</span><span style="color:#E1E4E8;">(to);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> (</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#79B8FF;">Link</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">to</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">{to} </span><span style="color:#B392F0;">unstable_viewTransition</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">      &lt;</span><span style="color:#85E89D;">p</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">style</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">{{</span></span>
<span class="line"><span style="color:#E1E4E8;">          viewTransitionName: isTransitioning</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;image-title&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        }}</span></span>
<span class="line"><span style="color:#E1E4E8;">      &gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        Image Number {idx}</span></span>
<span class="line"><span style="color:#E1E4E8;">      &lt;/</span><span style="color:#85E89D;">p</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">      &lt;</span><span style="color:#85E89D;">img</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">src</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">{src}</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">alt</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">{</span><span style="color:#9ECBFF;">\`Img \${</span><span style="color:#E1E4E8;">idx</span><span style="color:#9ECBFF;">}\`</span><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">style</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">{{</span></span>
<span class="line"><span style="color:#E1E4E8;">          viewTransitionName: isTransitioning</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;image-expand&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        }}</span></span>
<span class="line"><span style="color:#E1E4E8;">      /&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;/</span><span style="color:#79B8FF;">Link</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  );</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ImageLink</span><span style="color:#24292E;">(</span><span style="color:#E36209;">to</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">isTransitioning</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">unstable_useViewTransitionState</span><span style="color:#24292E;">(to);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> (</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#005CC5;">Link</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">to</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{to} </span><span style="color:#6F42C1;">unstable_viewTransition</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">      &lt;</span><span style="color:#22863A;">p</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">style</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{{</span></span>
<span class="line"><span style="color:#24292E;">          viewTransitionName: isTransitioning</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;image-title&quot;</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        }}</span></span>
<span class="line"><span style="color:#24292E;">      &gt;</span></span>
<span class="line"><span style="color:#24292E;">        Image Number {idx}</span></span>
<span class="line"><span style="color:#24292E;">      &lt;/</span><span style="color:#22863A;">p</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">      &lt;</span><span style="color:#22863A;">img</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">src</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{src}</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">alt</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{</span><span style="color:#032F62;">\`Img \${</span><span style="color:#24292E;">idx</span><span style="color:#032F62;">}\`</span><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">style</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{{</span></span>
<span class="line"><span style="color:#24292E;">          viewTransitionName: isTransitioning</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;image-expand&quot;</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        }}</span></span>
<span class="line"><span style="color:#24292E;">      /&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;/</span><span style="color:#005CC5;">Link</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  );</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><blockquote><p>IMPORTANT</p><p><code>unstable_viewTransition</code> 仅在使用数据路由器时有效，请参阅 <a href="https://baimingxuan.github.io/react-router6-doc/routers/picking-a-router" target="_blank" rel="noreferrer">&quot;选择路由&quot;</a>。</p></blockquote><blockquote><p>IMPORTANT</p><p>请注意，此应用程序接口标记为不稳定状态，可能会在未发布重大版本时发生破坏性更改。</p></blockquote>`,33),e=[o];function t(c,r,E,y,i,d){return n(),a("div",null,e)}const g=s(p,[["render",t]]);export{u as __pageData,g as default};
