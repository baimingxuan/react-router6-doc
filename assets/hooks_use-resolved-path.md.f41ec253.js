import{_ as s,o as a,c as o,Q as e}from"./chunks/framework.6f0990a9.js";const u=JSON.parse('{"title":"useResolvedPath","description":"","frontmatter":{},"headers":[],"relativePath":"hooks/use-resolved-path.md","filePath":"hooks/use-resolved-path.md","lastUpdated":1699796651000}'),n={name:"hooks/use-resolved-path.md"},l=e(`<h1 id="useresolvedpath" tabindex="-1"><code>useResolvedPath</code> <a class="header-anchor" href="#useresolvedpath" aria-label="Permalink to &quot;\`useResolvedPath\`&quot;">​</a></h1><p>类型声明</p><div class="language-tsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">declare</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">useResolvedPath</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">to</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">To</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">options</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> { </span><span style="color:#FFAB70;">relative</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">RelativeRoutingType</span><span style="color:#E1E4E8;"> }</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Path</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">declare</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">useResolvedPath</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">to</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">To</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">options</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> { </span><span style="color:#E36209;">relative</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">RelativeRoutingType</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;">)</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Path</span><span style="color:#24292E;">;</span></span></code></pre></div><p>此钩子根据当前位置的路径名解析给定 <code>to</code> 值中位置的 <code>pathname</code> 。</p><p>这在根据相对值建立链接时非常有用。例如，请查看 <a href="./../components/nav-link"><code>&lt;NavLink&gt;</code></a> 的源代码，它在内部调用 <code>useResolvedPath</code> 来解析所链接页面的完整路径名。</p><p>更多信息，请参阅 <a href="./../utils/resolve-path">resolvePath </a>。</p>`,6),p=[l];function t(c,r,E,y,d,i){return a(),o("div",null,p)}const v=s(n,[["render",t]]);export{u as __pageData,v as default};
